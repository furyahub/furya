syntax = "proto3";
package furya.feerefunder;

import "cosmos/base/query/v1beta1/pagination.proto";
import "feerefunder/genesis.proto";
import "feerefunder/params.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

option go_package = "github.com/furyahub/furya/x/feerefunder/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/furyahub/furya/feerefunder/params";
  }
  rpc FeeInfo(FeeInfoRequest) returns (FeeInfoResponse) {
    option (google.api.http).get = "/furyahub/furya/feerefunder/info";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message FeeInfoRequest {
  string channel_id = 1;
  string port_id = 2;
  uint64 sequence = 3;
}

message FeeInfoResponse {
  FeeInfo fee_info = 1;
}
