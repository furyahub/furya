syntax = "proto3";
package furya.feeburner;

import "cosmos/base/query/v1beta1/pagination.proto";
import "feeburner/params.proto";
import "feeburner/total_burned_furyas_amount.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

option go_package = "github.com/furyahub/furya/x/feeburner/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/furya/feeburner/params";
  }

  // TotalBurnedFuryasAmount queries total amount of burned furya fees.
  rpc TotalBurnedFuryasAmount(QueryTotalBurnedFuryasAmountRequest) returns (QueryTotalBurnedFuryasAmountResponse) {
    option (google.api.http).get = "/furya/feeburner/total_burned_furyas_amount";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryTotalBurnedFuryasAmountRequest is request type for the
// Query/QueryTotalBurnedFuryasAmount method.
message QueryTotalBurnedFuryasAmountRequest {}

// QueryTotalBurnedFuryasAmountResponse is response type for the
// Query/QueryTotalBurnedFuryasAmount method.
message QueryTotalBurnedFuryasAmountResponse {
  TotalBurnedFuryasAmount total_burned_furyas_amount = 1 [(gogoproto.nullable) = false];
}
