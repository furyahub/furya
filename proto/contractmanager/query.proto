syntax = "proto3";
package furya.contractmanager;

import "contractmanager/genesis.proto";
import "contractmanager/params.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

option go_package = "github.com/furyahub/furya/x/contractmanager/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/furya/contractmanager/params";
  }
  // Queries a Failure by address.
  rpc AddressFailures(QueryFailuresRequest) returns (QueryFailuresResponse) {
    option (google.api.http).get = "/furya/contractmanager/failures/{address}";
  }

  // Queries a list of Failure items.
  rpc Failures(QueryFailuresRequest) returns (QueryFailuresResponse) {
    option (google.api.http).get = "/furya/contractmanager/failures";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryFailuresRequest {
  string address = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryFailuresResponse {
  repeated Failure failures = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
